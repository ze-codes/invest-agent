### Redefined MVP Scope

The goal of the MVP is to tackle the most critical manual inefficiencies in investment research. The **wallet connection** feature will be deferred to a future version to simplify the initial build.

Here is the refined feature set for the MVP:

- **AI Chat Interface:** A primary interface where users can interact with the AI, featuring a project view.
- **One-Click Document Analysis:** The ability for the user to provide a URL or upload a PDF whitepaper. The system will then extract the text, process it, and make it available for querying through the chat.
- **Real-time Market Data:** API integration with a price aggregator like CoinGecko to provide accurate, real-time data such as price, market cap, and trading volume in AI responses.
- **Basic Personalization:** The app will ask users optional questions about their risk tolerance to help the AI frame its analysis and suggestions.
- **Source Citation:** All AI-generated answers must include their data sources to ensure credibility and build user trust.

---

### Proposed Tech Stack & Architecture

This stack is designed for speed of development.

#### **Frontend: Streamlit**

- **Why it works:** It allows for the rapid creation of interactive data applications and dashboards with pure Python. It's perfect for building the AI chat interface and displaying project information.
- **Implementation:** Use Streamlit's chat components to build the conversational UI. The front end will make API calls to your n8n backend to handle user queries and display the results.

#### **Backend & Orchestration: n8n**

n8n will serve as the central hub, orchestrating all the backend logic and connecting the various services.

- **Why it works:** Its visual, node-based interface makes it incredibly easy to connect different APIs and services.
- **Implementation:**
  _ **AI Agent Integration:** Use n8n's built-in nodes for major LLM providers (like OpenAI, Anthropic, or Google AI).
  _ **Data Integration:** Use n8n's "HTTP Request" node to call the CoinGecko API. The workflow will fetch this data and pass it to the LLM as context.
  _ **Personalization:** A workflow can be triggered when a user fills out a risk tolerance questionnaire. n8n will store these preferences and retrieve them to add to the AI prompt.
  _ **PDF Analysis:** n8n can receive a file URL or upload from Streamlit, fetch the document, and pass it to a library (like `PyPDF2` or `Unstructured.io`) to extract the text for the AI.
  description:
  globs:
  alwaysApply: false

---
